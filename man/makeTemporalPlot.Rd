% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CreateGraphics.R
\name{makeTemporalPlot}
\alias{makeTemporalPlot}
\title{Make scatter plot statistic versus time (faceted spatially)}
\usage{
makeTemporalPlot(
  data,
  varname = "Variable",
  varunit = "-",
  spatial = "zone",
  temporal = "year",
  delta = 0,
  digits = 2,
  upper_x = max(data$year),
  fixed_y = FALSE,
  ticks_y = 4,
  limits = NULL,
  threshold = NULL,
  grouping = FALSE
)
}
\arguments{
\item{data}{A dataframe with geometry (\code{zone}, \code{segment} or \code{stationname}) columns,
and \code{datetime} and \code{value} columns. For example, the result of \code{\link[=assignGeometry]{assignGeometry()}}.}

\item{varname}{Character. Optional. Variable name to include in the title of the plot. Placehorder is \code{Variable}.}

\item{varunit}{Character. Optional. Variable unit to include in the title of the plot. Placehorder is \code{-}.}

\item{spatial}{Character. Choose spatial object, one of \code{stationname}, \code{zone} or \code{segment}. Default is \code{zone}.}

\item{temporal}{Character. Either \code{year} or \code{month}. Default is \code{month}.}

\item{delta}{Numeric. If higher than 1 function will add background rectangles.}

\item{digits}{Numeric. Number of digits for the axis labels. Default is \code{2}.}

\item{upper_x}{Autocalculated.}

\item{fixed_y}{Aesthetics for the y axis.}

\item{ticks_y}{Aesthetics for the y axis.}

\item{limits}{Limits for each spatial level.}

\item{threshold}{Numeric. Add a threshold line. Default is \code{NULL}.}

\item{grouping}{Wheter to group or not. Default is \code{NULL}.}
}
\value{
A plot object.
}
\description{
Make scatter plot statistic versus time (faceted spatially)
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\examples{
# import data for 1046: 'Temperatuur in graden celcius in oppervlaktewater'
temperature_data <- importAbioticData("1046", start = 2018, end = 2023)

# add geometries
temperature_data_geo <- assignGeometry(temperature_data, "T2015", external = TRUE)

makeTemporalPlot(temperature_data_geo, varname = "Temperature", varunit = "C", temporal = "month")
}
